#!/bin/bash

### BEGIN INIT INFO
# PUT THIS SCRIPT INSIDE /usr/bin/ AS "USER INTERFACEs"
# Provides:          anonsurf
# Required-Start:
# Required-Stop:
# Should-Start:
# Default-Start:
# Default-Stop:
# Short-Description: Transparent Proxy through TOR.
### END INIT INFO
#
# Devs:
# Lorenzo 'Palinuro' Faletra <palinuro@parrotsec.org>
# Lisetta 'Sheireen' Ferrero <sheireen@autistiche.org>
# Francesco 'Mibofra' Bonanno <mibofra@parrotsec.org>
#
# Maintainer:
# Nong Hoang 'DmKnght' Tu <dmknght@parrotsec.org>
#
# Extended:
# Daniel 'Sawyer' Garcia <dagaba13@gmail.com>
#
# anonsurf is free software: you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
# You can get a copy of the license at www.gnu.org/licenses
#
# anonsurf is distributed in the hope that it will be
# useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Parrot Security OS. If not, see <http://www.gnu.org/licenses/>.


export BLUE='\033[1;94m'
export GREEN='\033[1;92m'
export RED='\033[1;91m'
export RESETCOLOR='\033[1;00m'


function notify {
	# Use system notification to show popup and let user know latest changes
	if [ -e /usr/bin/notify-send ]; then
		if [ "$(id -u)" = "0" ]; then
			for U in $(users | sed -e "s/ /\n/g" | uniq); do
				sudo -u $U -s /usr/bin/notify-send "AnonSurf" "$1" -i $2
			done
		else
			/usr/bin/notify-send "AnonSurf" "$1" -i $2
		fi
	fi
}


function dev-banner {
	echo -e "
AnonSurf [v3.1.0] -$BLUE Command Line Interface$RESETCOLOR

 $RED Developed$RESETCOLOR by$GREEN Lorenzo \"Palinuro\" Faletra$BLUE <palinuro@parrotsec.org>$RESETCOLOR
   $GREEN Lisetta \"Sheireen\" Ferrero$BLUE <sheireen@parrotsec.org>$RESETCOLOR
   $GREEN Francesco \"Mibofra\" Bonanno$BLUE <mibofra@parrotsec.org>$RESETCOLOR
 $RED Maintained$RESETCOLOR by$GREEN Nong Hoang \"DmKnght\" Tu$BLUE <dmknght@parrotsec.org>$RESETCOLOR
    and a huge amount of Caffeine, Mountain Dew + some GNU/GPL v3 stuff
  Extended by Daniel \"Sawyer\" Garcia <dagaba13@gmail.com>
	
  Dance like no one's watching. Encrypt like everyone is."
}


function help-banner {
	echo -e "
  Usage:
  $RED┌──[$GREEN$USER$YELLOW@$BLUE`hostname`$RED]─[$GREEN$PWD$RED]
  $RED└──╼ \$$GREEN"" anonsurf $RED{$GREEN""start$RED|$GREEN""stop$RED|$GREEN""restart$RED|$GREEN""enable-boot$RED|$GREEN""disable-boot$RED|$GREEN""change$RED""$RED|$GREEN""status$RED""}

  $RED start$BLUE -$GREEN Start system-wide Tor tunnel
  $RED stop$BLUE -$GREEN Stop AnonSurf and return to clearnet
  $RED restart$BLUE -$GREEN Restart AnonSurf daemon and Tor service
  $RED enable-boot$BLUE -$GREEN Enable AnonSurf at boot
  $RED disable-boot$BLUE -$GREEN Disable AnonSurf at boot
  $RED status-boot$BLUE -$GREEN Show if AnonSurf is enabled at boot
  $RED changeid$BLUE -$GREEN Auto change your identify on Tor network
  $RED status$BLUE -$GREEN Check if AnonSurf is working properly
  $RED myip$BLUE -$GREEN Check your IP address and verify your Tor connection
  $RED dns$BLUE -$GREEN Fast set / fix DNS. Please use /usr/bin/dnstool.$RESETCOLOR
	"
}


function kill-apps {
	# Kill some network app that can have sensitive data
	echo -e -n "$BLUE[$GREEN*$BLUE] killing dangerous applications\n"
	killall -q chrome dropbox skype icedove thunderbird firefox firefox-esr chromium xchat hexchat transmission steam firejail /usr/lib/firefox/firefox
	echo -e -n "$BLUE[$GREEN*$BLUE] Dangerous applications killed\n"
	notify "Dangerous applications killed" "dialog-error"

	echo -e -n "$BLUE[$GREEN*$BLUE] cleaning some dangerous cache elements\n"
	bleachbit -c adobe_reader.cache chromium.cache chromium.current_session chromium.history elinks.history emesene.cache epiphany.cache firefox.url_history flash.cache flash.cookies google_chrome.cache google_chrome.history  links2.history opera.cache opera.search_history opera.url_history &> /dev/null
	echo -e -n "$BLUE[$GREEN*$BLUE] Cache cleaned\n"
	notify "Cache cleaned" "dialog-error"
}


function checkIP {
	# Get current public IP address and isConnectToTor status
	DATA=`curl --socks5 localhost:9050 --socks5-hostname localhost:9050 -s https://check.torproject.org/`
	if [ "$DATA" != "" ]; then
		IP=`echo $DATA | grep -E -o "<strong>(\S+)</strong>" | sed -e 's/<[^>]*>//g'`
		echo -e "${GREEN}You are connecting to Tor network\nYour IP is $IP${RESETCOLOR}"
		notify "You are connecting to Tor network\nYour IP is $IP" "security-high"
	else
		IP=`curl -s https://check.torproject.org/ | grep -E -o "<strong>(\S+)</strong>" | sed -e 's/<[^>]*>//g'`
		if [ "$IP" == "" ]; then
			echo -e "${RED}Can't connect to internet\nPlease check your settings${RESETCOLOR}"
		else
			echo -e "${BLUE}You are not connecting to Tor network\nYour IP is $IP${RESETCOLOR}"
			notify "You are not connecting to Tor network\nYour IP is $IP" "security-medium"
		fi
	fi
}


function checkuid {
	# Make sure only root can run this script
	ME=$(whoami | tr [:lower:] [:upper:])
	if [ $(id -u) -ne 0 ]; then
		echo -e "\n$GREEN[$RED!$GREEN] ${RED}${ME} R U DRUNK?? This script must be run as root$RESETCOLOR\n" >&2
		exit 1
	fi
}


function start {
	# Start Tor and then AnonSurf daemon
	echo -e "\n$GREEN[${BLUE}i${GREEN}]${BLUE} Starting anonymous mode:$RESETCOLOR\n"

	echo -e "  ${GREEN}*${BLUE} Generating AnonSurf session"
	/usr/sbin/service anonsurfd start

	echo -e "  ${GREEN}*${BLUE} Starting tor service"

	echo -e "  ${GREEN}*${BLUE} All traffic was redirected throught Tor\n"
	if [ "$(systemctl is-active anonsurfd)" = "active" ]; then
		echo -e "$GREEN[${BLUE}i${GREEN}]${GREEN} You are under AnonSurf tunnel$RESETCOLOR"
		notify "Global Anonymous Proxy Activated" "security-high"
	elif [ "$(systemctl is-active anonsurfd)" = "failed" ]; then
		echo -e "$GREEN[${RED}x${GREEN}]${RED} AnonSurf failed to start$RESETCOLOR"
		notify "AnonSurf failed to start" "security-low"
	else
		echo -e "$GREEN[${BLUE}i${GREEN}]${BLUE} Unknown problem$RESETCOLOR"
		notify "Unknown problem" "security-medium"
	fi
	# sleep 1
}


function stop {
	# Stop Tor and AnonSurf daemon
	echo -e "\n$GREEN[${BLUE}i${GREEN}]${BLUE} Stopping anonymous mode:$RESETCOLOR\n"

	# /usr/sbin/service tor stop
	/usr/sbin/service anonsurfd stop

	echo -e "$GREEN[${BLUE}i${GREEN}]${BLUE} Anonymous mode stopped"
	notify "Global Anonymous Proxy Closed - Stop dancing :(" "security-low"
}


function status-boot {
	# Show if AnonSurf is enabled at boot
	# Systemd makes a symlink to start it on boot
	# we simple check symlink instead of calling sysctl to checks
	if [ -f /etc/systemd/system/default.target.wants/anonsurfd.service ]; then
		echo -e "\n$GREEN[$RED!$GREEN] ${BLUE}AnonSurf is ${GREEN}enabled${BLUE}}!$RESETCOLOR\n"
	else
		echo -e "\n$GREEN[$RED!$GREEN] ${BLUE}AnonSurf is ${RED}disabled${BLUE}!$RESETCOLOR\n"
	fi
}


function enable-boot {
	# if [ "$(systemctl list-unit-files | grep anonsurfd | awk '{print $2}')" = "disabled" ]; then
	# New method: Check if symlink file at /lib/systemd/system/anonsurfd.service is there
	# If file is there -> systemctl enabled anonsurf at boot
	
	# BUG: The folder default.target.wants is defined by target in sys unit file
	# Any change of that section creates bug in this condition

	# Check if symlink doesn't exists -> we enable it
	if [ -f /etc/systemd/system/default.target.wants/anonsurfd.service ]; then
		echo -e "\n$GREEN[$RED!$GREEN] ${RED}AnonSurf is already enabled!$RESETCOLOR\n"
	else
		/usr/bin/systemctl enable anonsurfd;
		notify "AnonSurf at boot is enabled" "security-high"
	fi
}


function disable-boot {
	# New method: Check if symlink file at /lib/systemd/system/anonsurfd.service is there
	# If file is there -> systemctl enabled anonsurf at boot
	# if [ "$(systemctl list-unit-files | grep anonsurfd | awk '{print $2}')" = "enabled" ]; then
	if [ -f /etc/systemd/system/default.target.wants/anonsurfd.service ]; then
		/usr/bin/systemctl disable anonsurfd;
		notify "AnonSurf at boot is disabled" "security-low"
	else
		echo -e "\n$GREEN[$RED!$GREEN] ${RED}AnonSurf wasn't enabled. Nothing to disable!$RESETCOLOR\n"
	fi
}


function change {
	# Change Tor node automatically
	# Use Tor control port
	if [ "$(systemctl is-active anonsurfd)" = "inactive" ]; then
		echo -e "\n$GREEN[$RED!$GREEN] ${RED}AnonSurf is not running! Can't get new ID!$RESETCOLOR\n" >&2
		notify "AnonSurf is not running! Can't change your ID!" "dialog-error"
	else
		if [ -f /etc/anonsurf/nyxrc ]; then
			passwd=`cat /etc/anonsurf/nyxrc | cut -d " " -f 2`
			echo -e "authenticate \"$passwd\"\nsignal newnym\nquit" | nc localhost -q 1 9051
			# TODO ask password if failed here
		else
			echo -n "Enter Tor control port password: "
			read -s passwd
			echo -e "authenticate \"$passwd\"\nsignal newnym\nquit" | nc localhost -q 1 9051
		fi
	fi
}


function status {
	# Show current Tor status by calling nyx
	if [ -f /etc/anonsurf/nyxrc ]; then
		# When AnonSurf is enabled, we create a nyxrc which contains
		# our random cleartext password
		# So we can call nyx without adding password
		/usr/bin/nyx --config /etc/anonsurf/nyxrc
	else
		/usr/bin/nyx
	fi
}


function dns {
	# DNSTool suggestion
	echo "Please use /usr/bin/dnstool instead"
	/usr/bin/dnstool help
}


# Start checking user options from cli
case "$1" in
	start)
	# Only start if anonsurfd is not running
		checkuid
		notify "AnonSurf is starting" "dialog-information"
		if [ "$(systemctl is-active anonsurfd)" = "active" ]; then
			notify "AnonSurf is running! Can't start it again!" "dialog-error"
			echo -e "\n$GREEN[$RED!$GREEN] ${RED}AnonSurf is running! Can't start it again!$RESETCOLOR\n" >&2
		else
			dev-banner
			zenity --question --text="Do you want AnonSurf to kill dangerous applications and clean some application caches?" --width 400 && kill-apps
			start
		fi
	;;
	
	stop)
	# Only stop if the anonsurfd is running
		checkuid
		notify "AnonSurf is stopping" "dialog-information"
		if [ "$(systemctl is-active anonsurfd)" = "active" ]; then
			zenity --question --text="Do you want AnonSurf to kill dangerous applications and clean some application caches?" --width 400 && kill-apps
			stop
		else
			dev-banner
			notify "AnonSurf is not running! Can't stop nothing!" "dialog-error"
			echo -e "\n$GREEN[$RED!$GREEN] ${RED}AnonSurf is not running! Can't stop nothing!$RESETCOLOR\n" >&2
		fi
	;;
	changeid|change-id|change)
		change
	;;
	status)
		if [ "$(systemctl is-active anonsurfd)" = "active" ]; then
			status
		else
			echo -e "\n$GREEN[$RED!$GREEN] ${RED}AnonSurf is not running!$RESETCOLOR\n"
		fi
	;;
	myip|ip)
		notify "Getting IP information from server" "dialog-information"
		checkIP
	;;
	dns)
		dns
	;;
	restart)
		# Restart if the daemon is running onnly
		checkuid
		notify "AnonSurf is restarting" "dialog-information"
		if [ "$(systemctl is-active anonsurfd)" = "active" ]; then
			/usr/sbin/service anonsurfd restart
		else
			echo -e "\n$GREEN[$RED!$GREEN] ${RED}AnonSurf is not running! Can't restart service!$RESETCOLOR\n" >&2
		fi
	;;
	enable-boot)
		checkuid
		enable-boot
	;;
	disable-boot)
		checkuid
		disable-boot
	;;
	status-boot)
		status-boot
	;;
   *)

help-banner

exit 1
;;
esac

echo -e $RESETCOLOR
exit 0
